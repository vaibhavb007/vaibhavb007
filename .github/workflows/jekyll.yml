# Workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Trigger the workflow on push to the "source" branch or manually via Actions tab
  push:
    branches: ["source"]
  workflow_dispatch:

# Set permissions for GITHUB_TOKEN to allow deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Ruby environment and install dependencies
      - name: Setup Ruby environment
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Ensure this matches your Jekyll requirements
          bundler-cache: true

      # Step 3: Configure GitHub Pages environment
      - name: Configure Pages environment
        id: pages
        uses: actions/configure-pages@v3

      # Step 4: Build the Jekyll site
      - name: Build Jekyll site
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      # Step 5: Verify build output (optional, for debugging purposes)
      - name: List build output files
        run: ls -la _site

      # Step 6: Upload build artifact for deployment
      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment Job
  deploy:
    runs-on: ubuntu-latest
    needs: build # Waits for the build job to complete successfully
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Step 1: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
